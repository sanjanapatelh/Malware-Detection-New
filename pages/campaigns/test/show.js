import React, { Component } from 'react';
import { Card, Grid, Button } from 'semantic-ui-react';
import Layout from '../../../components/Layout';
import Campaign from '../../../ethereum/testingNode';
import web3 from '../../../ethereum/web3';
//import ContributeForm from '../../components/ContributeForm';
import ApproveForm from '../../../components/ApproveForm';
import PercentGetForm from '../../../components/PercentGetForm';
import AnalyseForm from '../../../components/AnalyseForm';
import GetFileForm from '../../../components/GetFileForm';
import DownloadForm from '../../../components/DownloadForm';
import  ByteForm from '../../../components/ByteForm';

import { Link } from '../../../routes';

class CampaignShow extends Component {
  static async getInitialProps(props) {
    const campaign = Campaign(props.query.address);

    const summary = await campaign.methods.trustValue().call();

    return {
      address: props.query.address,
      trustValue : summary

    };
  }

  renderCards() {
    const {
      address,
      trustValue

    } = this.props;

    const items = [
      {
        header: address,
        meta: 'Address of Test Node',
        description:
          '',
        style: { overflowWrap: 'break-word' }
      },
      {
        header: trustValue,
        meta: 'Trust Value',
        description:
          'Trust Value of Node which changes based on action'
      }
    ];

    return <Card.Group items={items} />;
  }

  render() {
    return (
      <Layout>
        <h3>Node Details </h3>
        <Grid>
          <Grid.Row>
            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>

            <Grid.Column width={6}>
                <ApproveForm address={this.props.address} />
            </Grid.Column>
          </Grid.Row>

        <h3>Percentage Malware Reported </h3>
          <Grid.Row>
            <Grid.Column>
                <PercentGetForm address={this.props.address} />
            </Grid.Column>
          </Grid.Row>

        <h3>Analyzing File Path:</h3>

          <Grid.Row>
            <Grid.Column>
                <AnalyseForm />
            </Grid.Column>
          </Grid.Row>

          <br/><br/>

        <h3>Malware Url: </h3>

          <Grid.Row>
            <Grid.Column>
                <GetFileForm address={this.props.address}/>
                <ByteForm />
            </Grid.Column>
          </Grid.Row>

          <h3>Download By Url: </h3>

          <Grid.Row>
            <Grid.Column>
                <DownloadForm />
            </Grid.Column>
          </Grid.Row>


        </Grid>
      </Layout>
    );
  }
}

export default CampaignShow;

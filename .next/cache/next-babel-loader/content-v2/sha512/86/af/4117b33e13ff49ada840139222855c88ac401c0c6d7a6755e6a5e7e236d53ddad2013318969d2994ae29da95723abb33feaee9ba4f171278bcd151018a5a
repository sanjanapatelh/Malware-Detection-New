{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-New/pages/campaigns/show.js\";\nimport React, { Component } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/malware';\nimport web3 from '../../ethereum/web3';\nimport ConsentForm from '../../components/ConsentForm';\nimport UrlForm from '../../components/UrlForm';\nimport { Link } from '../../routes';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n    const summary = await campaign.methods.getSummary().call();\n    return {\n      address: props.query.address,\n      addedAddress: summary[0],\n      prob: summary[1],\n      deployedUser: summary[2],\n      MalwareHash: summary[3],\n      amount: summary[4],\n      perCentMalware: summary[5],\n      url: summary[6]\n    };\n  }\n\n  renderCards() {\n    const {\n      address,\n      prob,\n      deployedUser,\n      MalwareHash,\n      amount,\n      perCentMalware,\n      url\n    } = this.props;\n    const items = [{\n      header: deployedUser,\n      meta: 'Address of User',\n      description: 'The user uploaded this malware.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: amount,\n      meta: 'Amount(wei)',\n      description: 'This amount offered by user for getting files checked.'\n    }, {\n      header: address,\n      meta: 'Address of Malware',\n      description: 'Address of current malware contract',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: perCentMalware,\n      meta: 'Percent of malware',\n      description: 'Percent of malware detected after nodes report'\n    }, {\n      header: MalwareHash,\n      meta: 'Hash of Malware',\n      description: 'The sha256 hash for this malware',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: prob,\n      meta: 'Probabilty Malware',\n      description: '',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }, {\n      header: url,\n      meta: 'Url',\n      description: 'The user uploaded this malware.',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Layout, {\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Malware Show\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: [/*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: [/*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 10,\n            children: this.renderCards()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 6,\n            children: /*#__PURE__*/_jsxDEV(ConsentForm, {\n              address: this.props.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n            children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n              width: 6,\n              children: /*#__PURE__*/_jsxDEV(UrlForm, {\n                address: this.props.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default CampaignShow;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-New/pages/campaigns/show.js"],"names":["React","Component","Card","Grid","Button","Layout","Campaign","web3","ConsentForm","UrlForm","Link","CampaignShow","getInitialProps","props","campaign","query","address","summary","methods","getSummary","call","addedAddress","prob","deployedUser","MalwareHash","amount","perCentMalware","url","renderCards","items","header","meta","description","style","overflowWrap","render"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Card, Grid, Button } from 'semantic-ui-react';\nimport Layout from '../../components/Layout';\nimport Campaign from '../../ethereum/malware';\nimport web3 from '../../ethereum/web3';\nimport ConsentForm from '../../components/ConsentForm';\nimport UrlForm from '../../components/UrlForm';\nimport { Link } from '../../routes';\n\nclass CampaignShow extends Component {\n  static async getInitialProps(props) {\n    const campaign = Campaign(props.query.address);\n\n    const summary = await campaign.methods.getSummary().call();\n\n    return {\n      address: props.query.address,\n      addedAddress: summary[0],\n      prob: summary[1],\n      deployedUser: summary[2],\n      MalwareHash: summary[3],\n      amount: summary[4],\n      perCentMalware: summary[5],\n      url:summary[6]\n\n    };\n  }\n\n  renderCards() {\n    const {\n      address,\n      prob,\n      deployedUser,\n      MalwareHash,\n      amount,\n      perCentMalware,\n      url\n\n    } = this.props;\n\n    const items = [\n      {\n        header: deployedUser,\n        meta: 'Address of User',\n        description:\n          'The user uploaded this malware.',\n        style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: amount,\n        meta: 'Amount(wei)',\n        description:\n          'This amount offered by user for getting files checked.'\n      },\n      {\n        header: address,\n        meta: 'Address of Malware',\n        description:\n          'Address of current malware contract',\n        style: { overflowWrap: 'break-word' }\n      },\n      {\n        header: perCentMalware,\n        meta: 'Percent of malware',\n        description:\n          'Percent of malware detected after nodes report'\n      },\n      {\n        header: MalwareHash,\n        meta: 'Hash of Malware',\n        description:\n          'The sha256 hash for this malware',\n        style: { overflowWrap: 'break-word' }\n    },\n    {\n      header: prob,\n      meta: 'Probabilty Malware',\n      description:\n        '',\n      style: { overflowWrap: 'break-word' }\n    },\n    {\n      header: url,\n      meta: 'Url',\n      description:\n        'The user uploaded this malware.',\n      style: { overflowWrap: 'break-word' }\n    }\n\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <h3>Malware Show</h3>\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n\n            <Grid.Column width={6}>\n                <ConsentForm address={this.props.address} />\n\n            </Grid.Column>\n\n\n          </Grid.Row>\n\n\n\n          <Grid.Row>\n            <Grid.Column>\n            <Grid.Column width={6}>\n                <UrlForm address={this.props.address} />\n\n            </Grid.Column>\n            </Grid.Column>\n          </Grid.Row>\n        </Grid>\n      </Layout>\n    );\n  }\n}\n\nexport default CampaignShow;\n"]},"metadata":{},"sourceType":"module"}
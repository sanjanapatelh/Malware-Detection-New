{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-New/components/GetFileForm.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport { Form, Input, Message, Button, Card, Grid } from 'semantic-ui-react';\nimport Campaign from '../ethereum/testingNode';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport Link from 'next/link';\n\nclass ContributeForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      malwareAddress: '',\n      url: '',\n      errorMessage: '',\n      loading: false\n    });\n\n    _defineProperty(this, \"onSubmit\", async event => {\n      event.preventDefault();\n      const campaign = Campaign(this.props.address);\n      const res = await fetch('http://localhost:3000/api/GetDownloadUrl');\n      this.setState({\n        loading: false,\n        errorMessage: '',\n        url: res\n      });\n\n      try {//Router.replaceRoute(`/campaigns/test/${this.props.address}`);\n      } catch (err) {//this.setState({ errorMessage: err.message });\n      }\n\n      this.setState({\n        loading: false\n      });\n    });\n  }\n\n  renderCards() {\n    const items = [{\n      header: this.state.url,\n      meta: 'Malware Url',\n      description: '',\n      style: {\n        overflowWrap: 'break-word'\n      }\n    }];\n    return /*#__PURE__*/_jsxDEV(Card.Group, {\n      items: items\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 12\n    }, this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(Form, {\n      onSubmit: this.onSubmit,\n      error: !!this.state.errorMessage,\n      children: [/*#__PURE__*/_jsxDEV(Form.Field, {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Malware Hash\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          value: this.state.malwareAddress,\n          onChange: event => this.setState({\n            malwareAddress: event.target.value\n          }),\n          label: \"address\",\n          labelPosition: \"right\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          loading: this.state.loading,\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            target: \"_blank\",\n            href: \"http://localhost:3000/api/GetDownloadUrl\",\n            rel: \"noopener noreferrer\",\n            children: \"Download File Url!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 16\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Row, {\n          children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n            width: 10,\n            children: this.renderCards()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Message, {\n        error: true,\n        header: \"Oops!\",\n        content: this.state.errorMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default ContributeForm;","map":{"version":3,"sources":["/home/sanjana/Documents/BMS/FinalYearProjectTest/Malware-Detection-New/components/GetFileForm.js"],"names":["React","Component","Form","Input","Message","Button","Card","Grid","Campaign","web3","Router","Link","ContributeForm","malwareAddress","url","errorMessage","loading","event","preventDefault","campaign","props","address","res","fetch","setState","err","renderCards","items","header","state","meta","description","style","overflowWrap","render","onSubmit","target","value"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Form, Input, Message, Button ,Card, Grid} from 'semantic-ui-react';\nimport Campaign from '../ethereum/testingNode';\nimport web3 from '../ethereum/web3';\nimport { Router } from '../routes';\nimport Link from 'next/link';\n\nclass ContributeForm extends Component {\n  state = {\n    malwareAddress: '',\n    url : '',\n    errorMessage: '',\n    loading: false,\n  };\n\n  onSubmit = async event => {\n    event.preventDefault();\n        const campaign = Campaign(this.props.address);\n\n        const res = await fetch('http://localhost:3000/api/GetDownloadUrl');\n\n        this.setState({ loading: false, errorMessage: '',url:res });\n\n    try {\n\n\n      //Router.replaceRoute(`/campaigns/test/${this.props.address}`);\n    } catch (err) {\n      //this.setState({ errorMessage: err.message });\n    }\n\n    this.setState({ loading: false});\n  };\n\n  renderCards() {\n\n    const items = [\n      {\n        header: this.state.url,\n        meta: 'Malware Url',\n        description:\n          '',\n        style: { overflowWrap: 'break-word' }\n      }\n\n    ];\n\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Form onSubmit={this.onSubmit} error={!!this.state.errorMessage}>\n        <Form.Field>\n          <label>Malware Hash</label>\n          <Input\n            value={this.state.malwareAddress}\n            onChange={event => this.setState({ malwareAddress: event.target.value })}\n            label=\"address\"\n            labelPosition=\"right\"\n          />\n\n          <br/>\n          <br/>\n\n          <Button loading={this.state.loading}>\n               <a target=\"_blank\" href=\"http://localhost:3000/api/GetDownloadUrl\" rel=\"noopener noreferrer\">\n                   Download File Url!\n               </a>\n           </Button>\n          <br/>\n          <br/>\n\n        </Form.Field>\n\n        <Grid>\n          <Grid.Row>\n            <Grid.Column width={10}>{this.renderCards()}</Grid.Column>\n          </Grid.Row>\n        </Grid>\n\n        <Message error header=\"Oops!\" content={this.state.errorMessage} />\n\n      </Form>\n\n\n    );\n  }\n}\n\nexport default ContributeForm;\n"]},"metadata":{},"sourceType":"module"}